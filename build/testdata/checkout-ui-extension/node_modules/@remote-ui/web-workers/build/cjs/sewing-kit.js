'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('./_virtual/_rollupPluginBabelHelpers.js');
var plugins = require('@sewing-kit/plugins');
var babelPlugin = require('./babel-plugin.js');

var PLUGIN = 'Quilt.WebWorkers';
var addWorkerHooks = plugins.addHooks(function () {
  return {
    remoteUiWorkerNoop: new plugins.WaterfallHook(),
    remoteUiWorkerWebpackPlugins: new plugins.WaterfallHook(),
    remoteUiWorkerWebpackGlobalObject: new plugins.WaterfallHook(),
    remoteUiWorkerApplyBabelToPackages: new plugins.WaterfallHook()
  };
});
function webWorkers() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return plugins.createProjectPlugin(PLUGIN, function (_ref) {
    var _ref$tasks = _ref.tasks,
        dev = _ref$tasks.dev,
        build = _ref$tasks.build,
        project = _ref.project;
    dev.hook(function (_ref2) {
      var hooks = _ref2.hooks;
      hooks.configureHooks.hook(addWorkerHooks);
      hooks.configure.hook(function (configure) {
        var _configure$babelConfi, _configure$webpackPlu;

        (_configure$babelConfi = configure.babelConfig) === null || _configure$babelConfi === void 0 ? void 0 : _configure$babelConfi.hook(createBabelConfigUpdater(plugins.TargetRuntime.fromProject(project), configure, options));
        (_configure$webpackPlu = configure.webpackPlugins) === null || _configure$webpackPlu === void 0 ? void 0 : _configure$webpackPlu.hook(createWebpackPluginAdder(configure, options));
      });
    });
    build.hook(function (_ref3) {
      var hooks = _ref3.hooks;
      hooks.configureHooks.hook(addWorkerHooks);
      hooks.target.hook(function (_ref4) {
        var target = _ref4.target,
            hooks = _ref4.hooks;
        hooks.configure.hook(function (configure) {
          var _configure$babelConfi2, _configure$webpackPlu2;

          (_configure$babelConfi2 = configure.babelConfig) === null || _configure$babelConfi2 === void 0 ? void 0 : _configure$babelConfi2.hook(createBabelConfigUpdater(target.runtime, configure, options));
          (_configure$webpackPlu2 = configure.webpackPlugins) === null || _configure$webpackPlu2 === void 0 ? void 0 : _configure$webpackPlu2.hook(createWebpackPluginAdder(configure, options));
        });
      });
    });
  });
}

function createBabelConfigUpdater(runtime, configure, _ref5) {
  var _ref5$noop = _ref5.noop,
      defaultNoop = _ref5$noop === void 0 ? !runtime.includes(plugins.Runtime.Browser) : _ref5$noop,
      _ref5$applyBabelToPac = _ref5.applyBabelToPackages,
      applyBabelToPackages = _ref5$applyBabelToPac === void 0 ? {} : _ref5$applyBabelToPac;
  return /*#__PURE__*/function () {
    var _ref6 = _rollupPluginBabelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(babelConfig) {
      var _babelConfig$plugins;

      var _yield$Promise$all, _yield$Promise$all2, noop, packages;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return Promise.all([configure.remoteUiWorkerNoop.run(defaultNoop), configure.remoteUiWorkerApplyBabelToPackages.run(_rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, babelPlugin.DEFAULT_PACKAGES_TO_PROCESS), applyBabelToPackages))]);

            case 2:
              _yield$Promise$all = _context.sent;
              _yield$Promise$all2 = _rollupPluginBabelHelpers.slicedToArray(_yield$Promise$all, 2);
              noop = _yield$Promise$all2[0];
              packages = _yield$Promise$all2[1];
              return _context.abrupt("return", _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, babelConfig), {}, {
                plugins: [].concat(_rollupPluginBabelHelpers.toConsumableArray((_babelConfig$plugins = babelConfig.plugins) !== null && _babelConfig$plugins !== void 0 ? _babelConfig$plugins : []), [[require.resolve('./babel-plugin'), {
                  noop: noop,
                  packages: packages
                }]])
              }));

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref6.apply(this, arguments);
    };
  }();
}

function createWebpackPluginAdder(configure, _ref7) {
  var _ref7$webpackPlugins = _ref7.webpackPlugins,
      webpackPlugins = _ref7$webpackPlugins === void 0 ? [] : _ref7$webpackPlugins,
      _ref7$webpackGlobalOb = _ref7.webpackGlobalObject,
      webpackGlobalObject = _ref7$webpackGlobalOb === void 0 ? 'self' : _ref7$webpackGlobalOb;
  return /*#__PURE__*/function () {
    var _ref8 = _rollupPluginBabelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(plugins) {
      var _yield$Promise$all3, _yield$Promise$all4, WebWorkerPlugin, globalObject, workerPlugins;

      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return Promise.all([Promise.resolve().then(function () { return require('./webpack-parts/index.js'); }), configure.remoteUiWorkerWebpackGlobalObject.run(webpackGlobalObject), configure.remoteUiWorkerWebpackPlugins.run(webpackPlugins)]);

            case 2:
              _yield$Promise$all3 = _context2.sent;
              _yield$Promise$all4 = _rollupPluginBabelHelpers.slicedToArray(_yield$Promise$all3, 3);
              WebWorkerPlugin = _yield$Promise$all4[0].WebWorkerPlugin;
              globalObject = _yield$Promise$all4[1];
              workerPlugins = _yield$Promise$all4[2];
              return _context2.abrupt("return", [].concat(_rollupPluginBabelHelpers.toConsumableArray(plugins), [new WebWorkerPlugin({
                globalObject: globalObject,
                plugins: workerPlugins
              })]));

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref8.apply(this, arguments);
    };
  }();
}

exports.webWorkers = webWorkers;
