import { WaterfallHook } from '@sewing-kit/plugins';
import { Options as BabelOptions } from './babel-plugin';
export interface Options {
    noop?: boolean;
    webpackGlobalObject?: string;
    webpackPlugins?: readonly import('webpack').Plugin[];
    applyBabelToPackages?: NonNullable<BabelOptions['packages']>;
}
interface Hooks {
    readonly remoteUiWorkerWebpackPlugins: WaterfallHook<readonly import('webpack').Plugin[]>;
    readonly remoteUiWorkerWebpackGlobalObject: WaterfallHook<string>;
    readonly remoteUiWorkerNoop: WaterfallHook<boolean>;
    readonly remoteUiWorkerApplyBabelToPackages: WaterfallHook<NonNullable<BabelOptions['packages']>>;
}
declare module '@sewing-kit/hooks' {
    interface DevProjectConfigurationCustomHooks extends Hooks {
    }
    interface BuildProjectConfigurationCustomHooks extends Hooks {
    }
}
export declare function webWorkers(options?: Options): import("@sewing-kit/plugins").ProjectPlugin<import("@sewing-kit/plugins").WebApp | import("@sewing-kit/plugins").Service | import("@sewing-kit/plugins").Package>;
export {};
//# sourceMappingURL=sewing-kit.d.ts.map