'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reconciler = require('./reconciler.js');
var context = require('./context.js');

function render(element, root, callback) {
  // @see https://github.com/facebook/react/blob/993ca533b42756811731f6b7791ae06a35ee6b4d/packages/react-reconciler/src/ReactRootTags.js
  // I think we are a legacy root?
  var container = reconciler['default'].createContainer(root, 0, false, null);
  var renderContextValue = {
    root: root,
    reconciler: reconciler['default']
  }; // callback is cast here because the typings do not mark that argument
  // as optional, even though it is.

  reconciler['default'].updateContainer( /*#__PURE__*/jsxRuntime.jsx(context.RenderContext.Provider, {
    value: renderContextValue,
    children: element
  }), container, null, callback); // Did not work for me because (I think?) it is done by the worker
  // and therefore has an entirely different React.
  //
  // Original code was from:
  // @see https://github.com/facebook/react/issues/16666
  // @see https://github.com/michalochman/react-pixi-fiber/pull/148
  //
  // reconciler.injectIntoDevTools({
  //   bundleType: 1,
  //   findFiberByHostInstance: reconciler.findFiberByHostInstance,
  //   rendererPackageName: '@remote-ui/react',
  //   version: '16.9.0',
  // });
}

exports.render = render;
