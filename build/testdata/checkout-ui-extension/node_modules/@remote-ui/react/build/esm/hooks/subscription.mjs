import { slicedToArray as _slicedToArray, objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';
import { useState, useDebugValue, useEffect } from 'react';

function useRemoteSubscription(subscribable) {
  var _useState = useState(function () {
    return {
      subscribable: subscribable,
      value: subscribable.current
    };
  }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var valueToReturn = state.value;

  if (state.subscribable !== subscribable) {
    valueToReturn = subscribable.current;
    setState({
      subscribable: subscribable,
      value: valueToReturn
    });
  }

  useDebugValue(valueToReturn);
  useEffect(function () {
    var unsubscribe = subscribable.subscribe(checkForUpdates);
    checkForUpdates();
    return function () {
      unsubscribe();
    };

    function checkForUpdates() {
      var value = subscribable.current;
      setState(function (previousState) {
        if (previousState.subscribable !== subscribable || previousState.value === value) {
          return previousState;
        }

        return _objectSpread2(_objectSpread2({}, previousState), {}, {
          value: value
        });
      });
    }
  }, [subscribable]);
  return valueToReturn;
}

export { useRemoteSubscription };
