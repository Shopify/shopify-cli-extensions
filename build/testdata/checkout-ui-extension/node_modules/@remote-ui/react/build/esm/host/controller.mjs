import { renderComponent } from './RemoteComponent.mjs';
import { renderText } from './RemoteText.mjs';

function createController(components) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      externalRenderComponent = _ref.renderComponent,
      externalRenderText = _ref.renderText;

  var registry = new Map(Object.entries(components));
  var renderComponent$1 = externalRenderComponent ? function (componentProps) {
    return externalRenderComponent(componentProps, {
      renderDefault: function renderDefault() {
        return renderComponent(componentProps);
      }
    });
  } : renderComponent;
  var renderText$1 = externalRenderText ? function (textProps) {
    return externalRenderText(textProps, {
      renderDefault: function renderDefault() {
        return renderText(textProps);
      }
    });
  } : renderText;
  return {
    get: function get(type) {
      var value = registry.get(type);

      if (value == null) {
        throw new Error("Unknown component: ".concat(type));
      }

      return value;
    },
    renderer: {
      renderComponent: renderComponent$1,
      renderText: renderText$1
    }
  };
}

export { createController };
